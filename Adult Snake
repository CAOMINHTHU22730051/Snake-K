#include <iostream>
#include <windows.h>
#include <conio.h>
#include <ctime>

#define Max 100

using namespace std;

void gotoxy(int x,int y)
{
    HANDLE h = GetStdHandle(STD_OUTPUT_HANDLE);
    COORD a = {x, y};
    SetConsoleCursorPosition(h, a);
}

struct Point
{
    int x;
    int y;
};

struct Snake
{
    Point s[Max];
    int doDai;
};

struct Food
{
    Point f;
};

void taoFood(Food &food)
{
    srand(time(NULL));
    food.f.x = 1 + rand() % 29;
    food.f.y = 1 + rand() % 19;
}
void taoSnake(Snake &snake)
{
    snake.doDai = 7;
    snake.s[0].x = 16;
    snake.s[0].y = 10;
    snake.s[1].x = 15;
    snake.s[1].y = 10;
    snake.s[2].x = 14;
    snake.s[2].y = 10;
    snake.s[3].x = 13;
    snake.s[3].y = 10;
    snake.s[4].x = 12;
    snake.s[4].y = 10;
    snake.s[5].x = 11;
    snake.s[5].y = 10;
    snake.s[6].x = 10;
    snake.s[6].y = 10;
}

void hienThi(Snake snake, Food food)
{
    system("cls");
    for(int i = 0; i < snake.doDai; i++)
    {
        gotoxy(snake.s[i].x,snake.s[i].y);
        if(i == 0)
            cout << "O";
        else
            cout << "+";
    }
    gotoxy(food.f.x, food.f.y);
    cout << "*";
}

void diChuyen(Snake &snake, int huong)
{
    for(int i = snake.doDai - 1 ; i > 0; i--)
    {
        snake.s[i] = snake.s[i - 1];
    }
    if (huong == 0) snake.s[0].x = snake.s[0].x + 1;
    if (huong == 1) snake.s[0].y = snake.s[0].y + 1;
    if (huong == 2) snake.s[0].x = snake.s[0].x - 1;
    if (huong == 3) snake.s[0].y = snake.s[0].y - 1;
}

void taoKhung()
{
    gotoxy(0,0);
    for (int i = 0; i < 31; i++)
        cout<<"#";
    gotoxy(0,20);
    for (int i = 0; i < 31; i++)
        cout<<"#";
    for (int i = 1; i < 20; i++)
    {
        gotoxy(0,i);
        cout<<"#";
    }
    for (int i = 1; i < 20; i++)
    {
        gotoxy(30,i);
        cout<<"#" << "\n\n";
    }
    Sleep(300);
}

bool endGame(Snake &snake)
{
    if(snake.s[0].x > 29 || snake.s[0].x < 1 || snake.s[0].y > 19 || snake.s[0].y < 1)
        return true;
    for (int i = 1; i < snake.doDai; i++)
    {
		if (snake.s[0].x == snake.s[i].x && snake.s[0].y == snake.s[i].y)
            return true;
    }
    return false;
}


void anFood(Snake &snake, Food &food)
{
    if(snake.s[0].x == food.f.x && snake.s[0].y == food.f.y)
    {
		snake.s[snake.doDai].x = snake.s[snake.doDai - 1].x;
		snake.s[snake.doDai].y = snake.s[snake.doDai - 1].y;
		snake.doDai++;
		taoFood(food);
    }
}

int main()
{
    Snake snake;
    taoSnake(snake);
    Food food;
    taoFood(food);

    int huong = 1;
    char ch;
    while (!endGame(snake))
    {
        if (kbhit())
        {
            ch = getch();
            if (ch == 'a'&& huong != 0) huong = 2;
            if (ch == 'w'&& huong != 1) huong = 3;
            if (ch == 'd'&& huong != 2) huong = 0;
            if (ch == 's'&& huong != 3) huong = 1;
        }
        diChuyen(snake, huong);
        taoKhung();
        hienThi(snake, food);
        anFood(snake, food);
    }
    system("cls");
    gotoxy(11,10);
    cout << "GAME OVER";
    gotoxy(0,20);
    return 0;
}
